# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1
parameters:
  package-name:
    type: string
    default: "Base32Crockford"
  codecov-upload-file:
    type: string
    default: "info.lcov"
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  build-xenial:  
    machine:
      image: ubuntu-1604:201903-01
    environment:
      PACKAGE_NAME: << pipeline.parameters.package-name >>
    steps:
      - checkout
      - run:
         name: Download Swift 5.2
         command: wget -q https://swift.org/builds/swift-5.2-release/ubuntu1604/swift-5.2-RELEASE/swift-5.2-RELEASE-ubuntu16.04.tar.gz
      - run:
         name: Extract Swift 5.2
         command: tar xzf swift-5.2-RELEASE-ubuntu16.04.tar.gz
      - run:
         name: Add Path
         command: echo 'export PATH=/home/circleci/project/swift-5.2-RELEASE-ubuntu16.04/usr/bin:$PATH' >> $BASH_ENV
      - run: pwd
      - run:
          name: Resolve
          command: swift package resolve
      - run:
          name: Build
          command: swift build -v
      - run:
          name: Run tests
          command: swift test --enable-test-discovery --enable-code-coverage
      - run:
          name: Verify Valid Swift Package
          command: curl -s https://raw.githubusercontent.com/daveverwer/SwiftPMLibrary/master/script.sh | bash -s -- mine
      - run:
          name: Prepare Code Coverage
          command: llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/debug/${PACKAGE_NAME}PackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > info.lcov
      - codecov/upload:
          file: << pipeline.parameters.codecov-upload-file >>
          flags: circleci,xenial
  build-catalina-11_4_1:
    macos:
      xcode: "11.4.1"
    environment:
      PACKAGE_NAME: << pipeline.parameters.package-name >>
    steps:
      - checkout
      - run: 
          name: Build
          command: swift build
      - run:
          name: Lint
          command: swiftformat --lint . && swiftlint
      - run:
          name: Run Swift Package Tests
          command: swift test -v --enable-code-coverage
      - run:
          name: Prepare Code Coverage
          command: xcrun llvm-cov export -format="lcov" .build/debug/${PACKAGE_NAME}PackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov
      - codecov/upload:
          file: << pipeline.parameters.codecov-upload-file >>
          flags: circleci,macOS
      - run:
          name: Run iOS Tests
          command: xcodebuild build test -scheme ${PACKAGE_NAME}-Package -destination 'name=iPhone 11'
      - codecov/upload:
          file: << pipeline.parameters.codecov-upload-file >>
          flags: circleci,iOS
workflows:
  version: 2
  build:
    jobs:
      - build-catalina-11_4_1
      - build-bionic
